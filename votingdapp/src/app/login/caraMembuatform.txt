### **Alur Membuat Form di React Hingga Data Diterima di Backend**  

#### **1️⃣ User Mengisi Form di Frontend (React)**
- User membuka halaman web yang berisi form.  ✅
- Form memiliki input untuk **nama, email, dan password**.✅  
- Saat user mengetik, state di React diperbarui agar data tersimpan sebelum dikirim. (menggunakan uncontrolled state) ✅

#### **2️⃣ User Submit Form**
- Ketika tombol submit ditekan, event `onSubmit` akan dijalankan. ✅ 
- React akan mengumpulkan semua data input dari form.  ✅
- Metode HTTP yang digunakan biasanya **POST** karena data dikirim ke server. 

#### **3️⃣ Backend Menerima Request**
- Backend menerima permintaan dari frontend melalui **endpoint tertentu** (misalnya `/signup`). ✅ 
- Data yang dikirim oleh frontend diambil dari request body.  
- Sebelum diproses, backend bisa memvalidasi apakah data lengkap atau ada yang kosong.  

#### **4️⃣ Data Disimpan ke Database**
- Jika validasi sukses, backend menyimpan data ke database (misalnya SQLite, PostgreSQL, MongoDB, dll.).  
- Jika database menggunakan **SQLite** tanpa ORM, data disimpan dengan query langsung (`INSERT INTO users VALUES (...)`).  
- Jika menggunakan ORM seperti **Diesel (Rust)** atau **Prisma (Node.js)**, data bisa disimpan menggunakan fungsi bawaan ORM.  

#### **5️⃣ Backend Memberikan Response ke Frontend**
- Setelah menyimpan data, backend mengirimkan response (biasanya dalam format JSON) ke frontend.  
- Response bisa berisi:
  - **Sukses** → Memberikan pesan "Registrasi berhasil".  
  - **Gagal** → Memberikan error jika ada masalah, misalnya email sudah terdaftar.  

#### **6️⃣ Frontend Menampilkan Hasil ke User**
- Jika berhasil, frontend bisa:
  - Menampilkan pesan sukses.  
  - Mengarahkan user ke halaman login.  
- Jika gagal, frontend bisa:
  - Menampilkan pesan error agar user tahu apa yang salah.  

#### **Alur Singkatnya:**
1. **User mengisi form** ➝ 2. **Klik submit** ➝ 3. **Data dikirim ke backend** ➝ 4. **Backend memproses & menyimpan ke database** ➝ 5. **Response dikirim ke frontend** ➝ 6. **Frontend menampilkan hasil ke user**.