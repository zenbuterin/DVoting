Berikut versi penyederhanaan dari penjelasanmu agar lebih runut dan jelas secara teknis:

---

### 🎯 **Tujuan Smart Contract Voting MVP**
Membuat sistem voting berbasis smart contract yang **sederhana namun lengkap**, dengan struktur sebagai berikut:
- Ada **Room**
- Di dalam Room ada **Kandidat**
- Setiap Kandidat menyimpan **alamat pemilih (voter)** yang memilihnya.

---

### 🧠 **Alur Logika yang Diinginkan**

1. **Buat atau Masuk Room**
   - UI menyediakan opsi: "Buat Room" atau "Masuk Room".
   - Jika *Buat Room*: 
     - User memasukkan **kode unik angka** (sebagai ID Room).
     - Smart contract mencatat Room baru berdasarkan kode unik tersebut.
   - Jika *Masuk Room*: 
     - User memasukkan kode unik Room yang sudah ada.
     - Smart contract akan mengembalikan data Room terkait.

2. **Tambah Kandidat**
   - Di dalam Room, user bisa menambahkan Kandidat.
   - Yang dikirim ke smart contract hanya:
     - **Address kandidat**
     - **Kode unik kandidat** (bukan string seperti nama/foto)
   - Data tambahan seperti nama, deskripsi, dan foto kandidat **disimpan di database off-chain**.
   - Emit event untuk memberi tahu backend bahwa ada kandidat baru agar bisa menampilkan kolom input tambahan di UI.

3. **Voting**
   - User tekan tombol *Pilih* di UI.
   - Smart contract:
     - Mengecek apakah user sudah memilih sebelumnya.
     - Menambahkan address pemilih ke daftar voter kandidat yang dipilih.
     - Emit event berisi: siapa yang memilih, siapa yang dipilih, dan total voter saat ini.

4. **Pembatasan**
   - Setelah memilih, user **tidak bisa memilih lagi** di Room yang sama.
   - Pemilihannya **satu orang satu suara**.

---

### 📦 **Fungsi-Fungsi di Smart Contract**
- `createRoom(uint roomId)`
- `joinRoom(uint roomId)`
- `addCandidate(uint roomId, address candidateAddress, uint candidateId)`
- `vote(uint roomId, uint candidateId)`
- `getRoomData(uint roomId)` → mengembalikan semua kandidat dan address pemilih per kandidat.

---

### 📡 **Event Emit**
Setiap aksi utama (`createRoom`, `addCandidate`, `vote`) wajib:
- Emit event seperti:
  - `RoomCreated`
  - `CandidateAdded`
  - `Voted`
- Isi event mencakup `msg.sender`, `roomId`, `candidateId`, dll.

---

Kalau kamu ingin, bagian ini bisa langsung saya lanjutkan ke bentuk pseudocode atau Solidity template dasar. Mau lanjut ke sana?